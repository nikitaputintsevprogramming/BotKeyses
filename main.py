import aiogram
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup

from aiogram.dispatcher.filters import Text, Command
 
API_TOKEN = '7806447433:AAGCKqa34JjmpV3mwuv9IZ4abMZ_lOr76fc'
 
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

class InputStates(StatesGroup):
    mainMenu = State()
    presents = State()
    keyses = State()
    contacts = State()
 
# URL –ª–æ–≥–æ—Ç–∏–ø–∞
LOGO_URL = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQd-BLVf0ssQt6PEu4v7FU9wX3ZfQ0cUWcLTQ&s'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ –ª–æ–≥–æ—Ç–∏–ø–∞

# @dp.message_handler(commands=['start'], state=InputStates.mainMenu)
@dp.message_handler(commands=['start'])
@dp.message_handler(Text(equals=['üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é']))
async def send_main_menu(message: types.Message, state: FSMContext):
    kb_main_menu = [
        [
            types.KeyboardButton(text="üìä –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏"),
            types.KeyboardButton(text="üìÅ –ö–µ–π—Å—ã"),
            types.KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb_main_menu, resize_keyboard=True)
 
    # await message.reply("–ü—Ä–∏–≤–µ—Ç!\n\n–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞ —è —Ç–µ–±–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á—É.", reply_markup=keyboard)
    await message.answer_photo(photo=LOGO_URL, caption="–ü—Ä–∏–≤–µ—Ç!üëã\n\n–≠—Ç–æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é", reply_markup=keyboard)

urlkb_pres = InlineKeyboardMarkup(row_width=1)
urlButton1_pres = InlineKeyboardButton(text='üìÑ –û–±—â–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º—É–∑–µ–µ–≤ –∏ –≤—ã—Å—Ç–∞–≤–æ–∫)', url='https://appollopro.ru/razrabotka-muzeev-i-vystavok/')
urlButton2_pres = InlineKeyboardButton(text='üíª –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–ü–û –¥–ª—è —à–ª–µ–º–æ–≤ VR/AR/MR)', url='https://appollopro.ru/po-dlya-shlemov-vr-mr/')
urlButton3_pres = InlineKeyboardButton(text='üõ†Ô∏è –î–ª—è –∞–≥–µ–Ω—Ç—Å—Ç–≤ (–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ)', url='https://appollopro.ru/interactive/')
urlkb_pres.add(urlButton1_pres, urlButton2_pres, urlButton3_pres)

urlkb_keys = InlineKeyboardMarkup(row_width=1)
urlButton1_keys = InlineKeyboardButton(text='üé® –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤—ã—Å—Ç–∞–≤–∫–∞ –ú—É–∑–µ—è –í–æ–µ–Ω–Ω–æ–π –§–æ—Ä–º—ã "–°—É–≤–æ—Ä–æ–≤—Ü—ã –∏ –ù–∞—Ö–∏–º–æ–≤—Ü—ã"', url='https://appollopro.ru/cases/interaktivnaya-vystavka-muzeya-voennoj-formy-suvorovczy-i-nahimovczy/')
urlButton2_keys = InlineKeyboardButton(text='üï∂Ô∏è VR –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ACUVUE', url='https://appollopro.ru/cases/vr-prilozhenie-dlya-kompanii-acuvue/')
urlButton3_keys = InlineKeyboardButton(text='üñºÔ∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤—ã—Å—Ç–∞–≤–∫–∞ –≤ –ú—É–∑–µ–µ –í–æ–µ–Ω–Ω–æ–π –§–æ—Ä–º—ã "–û—Ö–æ—Ç–Ω–∏–∫–∏ –∏ —Å–æ–±–∏—Ä–∞—Ç–µ–ª–∏"', url='https://appollopro.ru/cases/interaktivnaya-vystavka-v-muzee-voennoj-formy/')
urlkb_keys.add(urlButton1_keys, urlButton2_keys, urlButton3_keys)

urlkb_contacts = InlineKeyboardMarkup(row_width=1)
urlButton1_contacts = InlineKeyboardButton(text='üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å', callback_data='call_contact')
urlButton2_contacts = InlineKeyboardButton(text='üåê –ù–∞—à —Å–∞–π—Ç', url='https://appollopro.ru/')
urlButton3_contacts = InlineKeyboardButton(text='üì± –¢–µ–ª–µ–≥—Ä–∞–º–º', url='https://telegram.me/Appollo_digital_bot')
urlButton4_contacts = InlineKeyboardButton(text='‚úâÔ∏è –ü–æ—á—Ç–∞', callback_data='call_email')
urlkb_contacts .add(urlButton1_contacts , urlButton2_contacts , urlButton3_contacts )

@dp.callback_query_handler(lambda c: c.data == 'call_contact')
async def process_callback_call_contact(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É: +74952150494")

@dp.callback_query_handler(lambda c: c.data == 'call_email')
async def process_callback_call_contact(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –ø–æ—á—Ç—É: info@appollopro.ru")

kb_back= [
        [
            types.KeyboardButton(text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"),
        ],
    ]
keyboard_back = types.ReplyKeyboardMarkup(keyboard=kb_back, resize_keyboard=True)

# @dp.message_handler(commands='presents')
@dp.message_handler(Text(equals=['üìä –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏']))
async def url_command(message: types.Message, state: FSMContext):
   await message.answer('–í—ã–±–µ—Ä–µ—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏:', reply_markup=urlkb_pres)
   await message.answer('–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.', reply_markup=keyboard_back)

@dp.message_handler(Text(equals=['üìÅ –ö–µ–π—Å—ã']))
async def url_command(message: types.Message, state: FSMContext):
   await message.answer('–ù–∞—à–∏ –∫–µ–π—Å—ã:', reply_markup=urlkb_keys)
   await message.answer('–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.', reply_markup=keyboard_back)

@dp.message_handler(Text(equals=['üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã']))
async def url_command(message: types.Message, state: FSMContext):
   await message.answer('–ê–¥—Ä–µ—Å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: –≠–ª–µ–∫—Ç—Ä–æ–ª–∏—Ç–Ω—ã–π –ø—Ä., 3, —Å—Ç—Ä. 2. \n\n–û—Ñ–∏—Å –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥–µ: –ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∞—è —É–ª., 18 \n\n+7(495)215-04-94 \ninfo@appollopro.ru')
   await message.answer('–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:', reply_markup=urlkb_contacts)
   await message.answer('–ù–∞–∂–º–∏—Ç–µ "–ù–∞–∑–∞–¥", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.', reply_markup=keyboard_back)

@dp.message_handler()
async def echo(message: types.Message, state: FSMContext):
    # await message.answer(message.text)
   await message.answer("–¢–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –Ω–µ—Ç. –í—ã–±–µ—Ä–µ—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é")
 
if __name__ == '__main__':
   executor.start_polling(dp, skip_updates=True)